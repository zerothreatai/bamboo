package com.zerothreatai.plugins.tasks;

import com.atlassian.bamboo.collections.ActionParametersMap;
import com.atlassian.bamboo.task.AbstractTaskConfigurator;
import com.atlassian.bamboo.task.TaskDefinition;
import org.jetbrains.annotations.NotNull;

import java.util.Map;

public class VulnerabilityScanTaskConfigurator extends AbstractTaskConfigurator {

    @Override
    public void populateContextForCreate(@NotNull Map<String, Object> context) {
        // When creating a new task, set a default (empty) value
        context.put("zt_token", "");
        context.put("wait_for_analysis", false);
    }

    @Override
    public void populateContextForEdit(@NotNull Map<String, Object> context, @NotNull TaskDefinition taskDefinition) {
        // When editing, populate the current configuration value
        context.put("zt_token", taskDefinition.getConfiguration().get("zt_token"));
        context.put("wait_for_analysis", Boolean.parseBoolean(taskDefinition.getConfiguration().get("wait_for_analysis")));
    }

    @NotNull
    @Override
    public Map<String, String> generateTaskConfigMap(@NotNull ActionParametersMap params, TaskDefinition previousTaskDefinition) {
        // Retrieve the default configuration map first
        final Map<String, String> config = super.generateTaskConfigMap(params, previousTaskDefinition);
        // Add the deploymentUrl from the user input to the config map
        config.put("zt_token", params.getString("zt_token"));
        config.put("wait_for_analysis", String.valueOf(params.getString("wait_for_analysis")));
        return config;
    }
}
