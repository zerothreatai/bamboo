package com.zerothreatai.plugins.tasks;

import com.atlassian.bamboo.build.logger.BuildLogger;
import com.atlassian.bamboo.task.*;
import com.zerothreatai.plugins.utils.HttpUtils;
import com.zerothreatai.plugins.utils.ScanResponse;
import org.jetbrains.annotations.NotNull;

public class VulnerabilityScanTask implements TaskType {

    @NotNull
    @Override
    public TaskResult execute(final @NotNull TaskContext taskContext) throws TaskException {
        final BuildLogger logger = taskContext.getBuildLogger();
        try {
            // Read the deployment URL from the task configuration
            String token = taskContext.getConfigurationMap().get("zt_token");
            boolean waitForAnalysis = taskContext.getConfigurationMap().get("wait_for_analysis");
            
            // initiate web app scan
            ScanResponse scanResponse = HttpUtils.initiateScan(deploymentUrl, logger);

            if (scanResponse.Status == 400) {
                logger.addErrorLogEntry("Failed to initiate scan. Reason: "+scanResponse.Message);
                return TaskResultBuilder.newBuilder(taskContext).failed().build();
            }

            logger.addBuildLogEntry("Scan started successfully.\nScan Report Url:" + scanResponse.Url);
            if(waitForAnalysis){
                boolean scanCompleted = HttpUtils.pollScanStatus(scanResponse.Code, logger);
                if (!scanCompleted) {
                    logger.addErrorLogEntry("Scan did not complete successfully.");
                    return TaskResultBuilder.newBuilder(taskContext).failed().build();
                }
                logger.addBuildLogEntry("Scan completed successfully.");
            }
            return TaskResultBuilder.newBuilder(taskContext).success().build();
        } catch (Exception e) {
            logger.addErrorLogEntry("Status polling failed:" + e.getMessage());
            throw new TaskException("Vulnerability scan task failed", e);
        }
    }
}
